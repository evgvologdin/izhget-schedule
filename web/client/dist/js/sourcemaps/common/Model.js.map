{"version":3,"sources":["common/Model.coffee"],"names":[],"mappings":"AAAA,MAAA,CAAO,CAAC,QAAD,EAAW,YAAX,EAAyB,sBAAzB,CAAP,EAAyD,SAAC,CAAD,EAAI,CAAJ,EAAO,KAAP;AACvD,MAAA;SAAM;;;oBACJ,UAAA,GAAY;;oBACZ,OAAA,GAAY;;oBAEZ,OAAA,GAAS,SAAC,KAAD,EAAQ,KAAR;aACP,IAAC,CAAA,UAAW,CAAA,KAAA,CAAZ,GAAqB;IADd;;oBAGT,OAAA,GAAS,SAAC,KAAD;MACA,IAAG,8BAAH;eAA4B,IAAC,CAAA,UAAW,CAAA,KAAA,EAAxC;;IADA;;oBAGT,QAAA,GAAU,SAAC,KAAD;aACR,IAAC,CAAA,UAAD,GAAc;IADN;;oBAGV,QAAA,GAAU,SAAA;AACR,aAAO,IAAC,CAAA;IADA;;oBAGV,OAAA,GAAS,SAAC,MAAD,EAAc,KAAd;AACP,UAAA;;QADQ,SAAS;;;QAAI,QAAQ;;MAC7B,IAAA,GAAU;MACV,OAAA,GACE;QAAA,GAAA,EAAa,KAAA,IAAU,MAAb,GAA6B,MAAM,CAAC,GAApC,GAAkD,IAAC,CAAA,OAA7D;QACA,IAAA,EAAa,MAAA,IAAU,MAAb,GAA6B,MAAM,CAAC,IAApC,GAAA,MADV;QAEA,IAAA,EAAa,MAAA,IAAU,MAAb,GAA6B,MAAM,CAAC,IAApC,GAAkD,MAF5D;QAGA,QAAA,EAAU,MAHV;QAIA,OAAA,EAAU,IAJV;QAKA,OAAA,EAAU,SAAC,QAAD,EAAW,MAAX;AACR,cAAA;UAAA,IAAA,GAAO,CAAC,CAAC,KAAF,CAAQ,IAAR;UACP,IAAI,CAAC,QAAL,CAAiB,CAAC,CAAC,OAAF,CAAU,QAAV,CAAA,KAAuB,IAA1B,GAAoC,QAAS,CAAA,CAAA,CAA7C,GAAqD,QAAnE;UACA,IAAwB,SAAA,IAAa,MAArC;mBAAA,MAAM,CAAC,OAAP,CAAe,IAAf,EAAA;;QAHQ,CALV;QASA,KAAA,EAAU,SAAC,QAAD,EAAW,MAAX;UACR,IAAkC,OAAA,IAAW,MAA7C;mBAAA,MAAM,CAAC,KAAP,CAAa,QAAb,EAAuB,MAAvB,EAAA;;QADQ,CATV;;MAYF,IAAG,KAAA,KAAS,IAAZ;eACE,KAAK,CAAA,SAAE,CAAA,GAAP,CAAW,OAAX,EADF;OAAA,MAAA;eAGE,CAAC,CAAC,IAAF,CAAO,OAAP,EAHF;;IAfO;;oBAoBT,OAAA,GAAS,SAAC,MAAD,EAAc,KAAd;AACP,UAAA;;QADQ,SAAS;;;QAAI,QAAQ;;MAC7B,IAAA,GAAU;MACV,OAAA,GACE;QAAA,GAAA,EAAa,KAAA,IAAU,MAAb,GAA6B,MAAM,CAAC,GAApC,GAAkD,IAAC,CAAA,OAA7D;QACA,IAAA,EAAa,MAAA,IAAU,MAAb,GAA6B,MAAM,CAAC,IAApC,GAAA,MADV;QAEA,IAAA,EAAa,MAAA,IAAU,MAAb,GAA6B,MAAM,CAAC,IAApC,GAAkD,MAF5D;QAGA,QAAA,EAAU,MAHV;QAIA,OAAA,EAAU,SAAC,QAAD,EAAW,MAAX;AACR,cAAA;UAAA,IAAA,GAAO;UACP,IAAG,CAAC,CAAC,OAAF,CAAU,QAAV,CAAH;AACE,iBAAA,0CAAA;;cACE,IAAA,GAAO,CAAC,CAAC,KAAF,CAAQ,IAAR;cACP,IAAI,CAAC,QAAL,CAAc,KAAd;cACA,IAAI,CAAC,IAAL,CAAU,IAAV;AAHF,aADF;;UAKA,IAAwB,SAAA,IAAa,MAArC;mBAAA,MAAM,CAAC,OAAP,CAAe,IAAf,EAAA;;QAPQ,CAJV;QAYA,KAAA,EAAU,SAAC,QAAD,EAAW,MAAX;UACR,IAAkC,OAAA,IAAW,MAA7C;mBAAA,MAAM,CAAC,KAAP,CAAa,QAAb,EAAuB,MAAvB,EAAA;;QADQ,CAZV;;MAeF,IAAG,KAAA,KAAS,IAAZ;eACE,KAAK,CAAA,SAAE,CAAA,GAAP,CAAW,OAAX,EADF;OAAA,MAAA;eAGE,CAAC,CAAC,IAAF,CAAO,OAAP,EAHF;;IAlBO;;;;;AArC4C,CAAzD","file":"../../common/Model.js","sourcesContent":["define ['jquery', 'underscore', 'components/AjaxQueue'], ($, _, queue) ->\n  class model\n    attributes: []\n    loadUrl:    null\n    \n    setAttr: (index, value) ->\n      @attributes[index] = value\n      \n    getAttr: (index) ->\n      return if @attributes[index]? then @attributes[index]\n      \n    setAttrs: (value) ->\n      @attributes = value\n        \n    getAttrs: () ->\n      return @attributes\n    \n    loadOne: (params = {}, later = false) ->\n      self    = this\n      request = \n        url:      if 'url'  of params     then params.url      else @loadUrl\n        data:     if 'data' of params     then params.data\n        type:     if 'type' of params     then params.type     else 'post'\n        dataType: 'json'\n        context:  this\n        success:  (response, status) ->\n          load = _.clone self\n          load.setAttrs if $.isArray(response) is true then response[0] else response\n          params.success(load) if 'success' of params\n        error:    (response, status) ->\n          params.error(response, status) if 'error' of params\n        \n      if later is true\n        queue::add request\n      else\n        $.ajax request\n        \n    loadAll: (params = {}, later = false) ->\n      self    = this\n      request = \n        url:      if 'url'  of params     then params.url      else @loadUrl\n        data:     if 'data' of params     then params.data\n        type:     if 'type' of params     then params.type     else 'post'\n        dataType: 'json'\n        success:  (response, status) ->\n          load = []\n          if $.isArray(response)\n            for attrs in response\n              data = _.clone self\n              data.setAttrs attrs\n              load.push data\n          params.success(load) if 'success' of params\n        error:    (response, status) ->\n          params.error(response, status) if 'error' of params\n\n      if later is true\n        queue::add request\n      else\n        $.ajax request"]}